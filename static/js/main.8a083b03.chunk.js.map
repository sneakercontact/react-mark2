{"version":3,"sources":["img/profile-image.jpg","logo.svg","GoogleSignIn.js","App.js","reportWebVitals.js","index.js"],"names":["GoogleSignInButtonPutinGreatestLeaderInTheWorld","script","document","createElement","src","onload","initializeGoodleSignIn","body","appendChild","window","gapi","load","auth2","init","client_id","console","log","params","onSuccess","signin2","render","this","insertGapiScript","className","align","text-align","id","React","Component","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","useAuthState","user","width","height","profileImage","alt","GoogleSignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"uNAAe,GCAA,IDAA,IAA0B,2C,qFE8D1BA,E,sKArDb,WAAoB,IAAD,OACXC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,oCACbH,EAAOI,OAAS,WACd,EAAKC,0BAEPJ,SAASK,KAAKC,YAAYP,K,oCAG1B,WACEQ,OAAOC,KAAKC,KAAK,SAAS,WACxBF,OAAOC,KAAKE,MAAMC,KAAK,CACrBC,UAAW,8EAEbC,QAAQC,IAAI,cAEZP,OAAOC,KAAKC,KAAK,WAAW,WAC1B,IAAMM,EAAS,CACbC,UAAW,WACTH,QAAQC,IAAI,kCAGlBP,OAAOC,KAAKS,QAAQC,OAAO,cAAeH,W,+BAKhD,WACEF,QAAQC,IAAI,WACZK,KAAKC,qB,oBAGP,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,8CAEE,yBAAQA,UAAU,aAAlB,UAIE,8EACA,mBAAGC,MAAM,SAAT,SACA,mBAAGC,aAAW,SAASC,GAAG,cAA1B,2C,GA7CkDC,IAAMC,WCMpEC,IAASC,cAAc,CACrBC,OAAQ,0CACNC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGnB,IAAMC,EAAOT,IAASS,OACJT,IAASU,YAiBZC,MAff,WAAgB,IAAD,EACEC,YAAaH,GAArBI,EADM,oBAGb,OACE,sBAAKnB,UAAU,MAAf,UACE,8DACA,iFACA,qBAAKoB,MAAM,MAAMC,OAAO,MAAMxC,IAAKyC,EAAcC,IAAI,kBACrD,kCACGJ,EAAO,kCAAmB,cAACK,EAAD,UCvBpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASrC,OACP,eAAC,IAAMsC,WAAP,WACE,cAAC,EAAD,IACA,cAACX,EAAD,OAEF7C,SAASyD,eAAe,SAM1BX,M","file":"static/js/main.8a083b03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile-image.575c6d72.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import { GoogleSignin, GoogleSigninbutton } from '@react-native-community/';\n\n\n\nclass GoogleSignInButtonPutinGreatestLeaderInTheWorld extends React.Component{\n  \n  insertGapiScript() {\n    const script = document.createElement('script')\n    script.src = 'https://apis.google.com/js/api.js'\n    script.onload = () => {\n      this.initializeGoodleSignIn()\n    }\n    document.body.appendChild(script)\n  }\n\n    initializeGoodleSignIn() {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init({\n          client_id: '1059867147493-5jm30t23fds413uepfb6j167krur5cm7.apps.googleusercontent.com'\n        })\n        console.log('Api inited')\n  \n        window.gapi.load('signin2', () => {\n          const params = {\n            onSuccess: () => {\n              console.log('user has finished signing in')\n            }\n          }\n        window.gapi.signin2.render('loginButton', params)\n        })\n      })\n    }\n\n  componentDidMount() {\n    console.log('Loading')\n    this.insertGapiScript();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Google Login</h1>\n       \n          <header className=\"App-header\">\n            \n\n      \n            <p>You are not signed in. Click here to sign in.</p>\n            <p align=\"center\">\n            <a text-align=\"center\" id=\"loginButton\">Login with Google</a>\n            </p>\n          </header>\n        </div>\n    );\n     }\n    }\n  \n    \n\nexport default GoogleSignInButtonPutinGreatestLeaderInTheWorld ;\n","//to commit, use \"git add .\", then \"git commit -m \"something\"\", then \"npm run deploy\", then \"git push -u origin master\"\nimport logo from './logo.svg';\nimport profileImage from './img/profile-image.jpg';\nimport './App.css';\n//import { GoogleSignin, GoogleSigninbutton } from '@react-native-community/';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport GoogleSignInButtonPutinGreatestLeaderInTheWorld from './GoogleSignIn';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCCtkl_rr-spMhBFgP2lxcYpZZk0RY2xOw\",\n    authDomain: \"cas-project1.firebaseapp.com\",\n    projectId: \"cas-project1\",\n    storageBucket: \"cas-project1.appspot.com\",\n    messagingSenderId: \"1059867147493\",\n    appId: \"1:1059867147493:web:63fc2249cba7bf9bca280c\",\n    measurementId: \"G-QMEZYLP0G1\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <h1> Will's Workout Tracker V.1 </h1>\n      <h2>Still a work in progress. Here's a photo of me:</h2>\n      <img width=\"500\" height=\"625\" src={profileImage} alt=\"profile-image\" />\n      <section>\n        {user ? <workoutSubmit/> : <GoogleSignInButtonPutinGreatestLeaderInTheWorld />}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GoogleSignIn from './GoogleSignIn';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GoogleSignIn />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}